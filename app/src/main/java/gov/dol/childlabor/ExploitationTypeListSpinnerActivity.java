package gov.dol.childlabor;

import android.content.Intent;
import android.os.Bundle;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;

import java.util.ArrayList;

public class ExploitationTypeListSpinnerActivity extends AppCompatActivity {

    private int sectionNumber = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_exploitation_type_list_spinner);
        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);

        getHeaderView();
        ListView listView = (ListView) findViewById(R.id.listView);
        listView.setAdapter(new ExploitationListAdapter(this, getCountriesByExploitationType("All"), sectionNumber));
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                Intent intent = new Intent(ExploitationTypeListSpinnerActivity.this, CountryViewActivity.class);
                startActivity(intent);
            }
        });

        AppHelpers.trackScreenView((AnalyticsApplication) getApplication(), "Exploitation Types List Screen");
    }

    protected Country[] getCountriesByExploitationType(String exploitationType) {
        Country[] allCountries = CountryXmlParser.fromContext(this).getCountyListWithExploitation();
        ArrayList<Country> countryList = new ArrayList<>();
        for(Country country : allCountries) {
            switch(exploitationType) {
                case "Child Labor":
                    sectionNumber = 2;
                    if (country.getChildLaborGoods().length > 0) countryList.add(country);
                    break;
                case "Forced Labor":
                    sectionNumber = 3;
                    if (country.getForcedLaborGoods().length > 0) countryList.add(country);
                    break;
                case "Forced Child Labor":
                    sectionNumber = 4;
                    if (country.getForcedChildLaborGoods().length > 0) countryList.add(country);
                    break;
                case "Derived Labor Exploitation":
                    sectionNumber = 5;
                    if (country.getDerivedExploitationLaborGoods().length > 0) countryList.add(country);
                    break;
                case "All":
                default:
                    sectionNumber = 1;
                    countryList.add(country);
            }
        }

        return countryList.toArray(new Country[countryList.size()]);
    }

    protected void getHeaderView() {
        Spinner spinner = (Spinner) findViewById(R.id.listViewSpinner);
        String[] items = {"All", "Child Labor", "Forced Labor", "Forced Child Labor","Derived Labor Exploitation"};
        spinner.setAdapter(new ArrayAdapter<String>(this, R.layout.good_view_exploitation_spinner_row, R.id.exploitationSpinnerTextView, items) {
            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                LayoutInflater theInflater = getLayoutInflater();
                View theView = theInflater.inflate(R.layout.good_view_exploitation_spinner_row, parent, false);

                TextView spinnerTextView = (TextView) theView.findViewById(R.id.exploitationSpinnerTextView);
                spinnerTextView.setText(getItem(position));

                ImageView childLaborImageView = (ImageView) theView.findViewById(R.id.exploitationSpinnerChildLaborImageView);
                ImageView forcedLaborImageView = (ImageView) theView.findViewById(R.id.exploitationSpinnerForcedLaborImageView);
                ImageView forcedChildLaborImageView = (ImageView) theView.findViewById(R.id.exploitationSpinnerForcedChildLaborImageView);
                ImageView derivedExploitationLaborImageView = (ImageView) theView.findViewById(R.id.derived_exploitation);

                RelativeLayout.LayoutParams params;
                switch(getItem(position)) {
                    case "Child Labor":
                        params = (RelativeLayout.LayoutParams) childLaborImageView.getLayoutParams();
                        params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                        forcedLaborImageView.setVisibility(View.GONE);
                        forcedChildLaborImageView.setVisibility(View.GONE);
                        derivedExploitationLaborImageView.setVisibility(View.GONE);
                        break;
                    case "Forced Labor":
                        params = (RelativeLayout.LayoutParams) forcedLaborImageView.getLayoutParams();
                        params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                        childLaborImageView.setVisibility(View.GONE);
                        forcedChildLaborImageView.setVisibility(View.GONE);
                        derivedExploitationLaborImageView.setVisibility(View.GONE);
                        break;
                    case "Forced Child Labor":
                        params = (RelativeLayout.LayoutParams) forcedChildLaborImageView.getLayoutParams();
                        params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                        childLaborImageView.setVisibility(View.GONE);
                        forcedLaborImageView.setVisibility(View.GONE);
                        derivedExploitationLaborImageView.setVisibility(View.GONE);
                        break;
                    case "Derived Labor Exploitation":
                        params = (RelativeLayout.LayoutParams) derivedExploitationLaborImageView.getLayoutParams();
                        params.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
                        childLaborImageView.setVisibility(View.GONE);
                        forcedLaborImageView.setVisibility(View.GONE);
                        forcedChildLaborImageView.setVisibility(View.GONE);

                        break;
                }
                return theView;
            }

            @Override
            public View getDropDownView(int position, View convertView, ViewGroup parent) {
                return getView(position, convertView, parent);
            }
        });
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                String exploitationType = parent.getItemAtPosition(position).toString();
                Country[] countries = getCountriesByExploitationType(exploitationType);

                ListView listView = (ListView) findViewById(R.id.listView);
                listView.setAdapter(new ExploitationListAdapter(ExploitationTypeListSpinnerActivity.this, countries, sectionNumber));
            }

            @Override
            public void onNothingSelected(AdapterView<?> parent) {

            }
        });

    }

    public void selectGoodWidget(View v) {
        CountryGood countryGood = (CountryGood) v.getTag();

        Good selectedGood = new Good("Good");

        GoodXmlParser parser = GoodXmlParser.fromContext(this);
        Good[] goods = parser.getGoodList();
        for(Good good : goods) {
            if (good.getName().equals(countryGood.getGoodName())) {
                selectedGood = good;
            }
        }

        Intent intent = new Intent(this, GoodViewActivity.class);
        intent.putExtra("good", selectedGood);
        startActivity(intent);
    }

    public void selectCountryWidget(View v) {
        Country selectedCountry = (Country) v.getTag();

        Intent intent = new Intent(this, CountryViewActivity.class);
        intent.putExtra("country", selectedCountry);
        startActivity(intent);
    }
}
